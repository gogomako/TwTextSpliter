/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bg.UIMessager;
import bg.LanguageManager;
import bg.Spliter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.nio.charset.Charset;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 * @brief   This is a project
 * to split text with 3 ways: 
 * split by lines, split by size of file, split by costomized delimiter
 * @author  Mako Chang
 * @since   2013
 * @date    1/2014
 * @version 0.3
 */
public class TwTextSpliterGUI extends javax.swing.JFrame { 
    String output_file_name_format = "%d.txt";
    JFileChooser file_chooser = new JFileChooser();
    Charset utf8 = Charset.forName("UTF-8");//defind char set
    LanguageManager lanManager;

    /**
     * Creates new form TwTextSpliterGUI
     */
    public TwTextSpliterGUI() {
        initComponents();
        my_init();
    }
    
    /**
     * @brief This is a function to set costomized mouse clicked actions
     * If mouse clicks at textfield, select the radio button at the same time
     * @pre Called by default constructor
     * @post The specific radio button will be selected when mouse clicks the textfield
     * @return void
     */
    private void my_init(){

        TF_lines_per_file.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                //RB_lines_per_file.doClick();
                RB_lines_per_file.setSelected(rootPaneCheckingEnabled);
            }
        });
        TF_size_per_file.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                //RB_size_per_file.doClick();
                RB_size_per_file.setSelected(rootPaneCheckingEnabled);
            }
        });
        TF_custom_delimiter.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                RB_custom_delimiter.doClick();
                RB_custom_delimiter.setSelected(rootPaneCheckingEnabled);
            }
        });
        
        lanManager = new LanguageManager(CB_language.getSelectedIndex());
    }

    /**
     * @brief This method is called from within the constructor to initialize the form.
     * @warning Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG_splitby = new javax.swing.ButtonGroup();
        LB_filepath = new javax.swing.JLabel();
        TF_file_path = new javax.swing.JTextField();
        CB_language = new javax.swing.JComboBox();
        LB_language = new javax.swing.JLabel();
        LB_splitby = new javax.swing.JLabel();
        RB_lines_per_file = new javax.swing.JRadioButton();
        RB_custom_delimiter = new javax.swing.JRadioButton();
        RB_size_per_file = new javax.swing.JRadioButton();
        TF_lines_per_file = new javax.swing.JTextField();
        TF_size_per_file = new javax.swing.JTextField();
        CB_size_unit = new javax.swing.JComboBox();
        BT_split = new javax.swing.JButton();
        BT_browse = new javax.swing.JButton();
        TF_custom_delimiter = new javax.swing.JTextField();
        LB_input_encoding = new javax.swing.JLabel();
        CB_delete_source = new javax.swing.JCheckBox();
        LB_output_encoding = new javax.swing.JLabel();
        CB_input_encoding = new javax.swing.JComboBox();
        CB_output_encoding = new javax.swing.JComboBox();
        LB_output_filename = new javax.swing.JLabel();
        LB_output_file_path = new javax.swing.JLabel();
        TF_output_file_path = new javax.swing.JTextField();
        BT_save_as = new javax.swing.JButton();
        CB_output_file_name_format = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LB_filepath.setText("Input File Path");

        TF_file_path.setEditable(false);

        CB_language.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "正體中文" }));
        CB_language.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_languageActionPerformed(evt);
            }
        });

        LB_language.setText("Language");

        LB_splitby.setText("Split By");

        BG_splitby.add(RB_lines_per_file);
        RB_lines_per_file.setText("Lines per File");
        RB_lines_per_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_lines_per_fileActionPerformed(evt);
            }
        });

        BG_splitby.add(RB_custom_delimiter);
        RB_custom_delimiter.setText("Custom Delimiter");
        RB_custom_delimiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_custom_delimiterActionPerformed(evt);
            }
        });

        BG_splitby.add(RB_size_per_file);
        RB_size_per_file.setText("Size per File");

        TF_lines_per_file.setMaximumSize(new java.awt.Dimension(100000, 100000));
        TF_lines_per_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_lines_per_fileActionPerformed(evt);
            }
        });

        TF_size_per_file.setMaximumSize(new java.awt.Dimension(100000, 100000));

        CB_size_unit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KB", "MB", "GB" }));
        CB_size_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_size_unitActionPerformed(evt);
            }
        });

        BT_split.setText("Split");
        BT_split.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_splitActionPerformed(evt);
            }
        });

        BT_browse.setText("Browse...");
        BT_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_browseActionPerformed(evt);
            }
        });

        LB_input_encoding.setText("Input Encoding");

        CB_delete_source.setText("Delete source after splited");

        LB_output_encoding.setText("Output Encoding");

        CB_input_encoding.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AUTO", "ANSI", "UTF-8" }));

        CB_output_encoding.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AUTO", "ANSI", "UTF-8" }));

        LB_output_filename.setText("Output File Name");

        LB_output_file_path.setText("Output File Path");

        TF_output_file_path.setEditable(false);
        TF_output_file_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_output_file_pathActionPerformed(evt);
            }
        });

        BT_save_as.setText("Save As...");

        CB_output_file_name_format.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1,2,3...", "01,02,03...", "0,1,2...", "00,01,02..." }));
        CB_output_file_name_format.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_output_file_name_formatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_filepath)
                            .addComponent(LB_output_file_path)
                            .addComponent(LB_output_filename)
                            .addComponent(LB_splitby))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RB_custom_delimiter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TF_size_per_file, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CB_size_unit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(TF_custom_delimiter)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RB_lines_per_file)
                                    .addComponent(RB_size_per_file))
                                .addGap(20, 20, 20)
                                .addComponent(TF_lines_per_file, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TF_file_path, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BT_browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TF_output_file_path, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BT_save_as, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(CB_output_file_name_format, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_input_encoding)
                            .addComponent(LB_output_encoding)
                            .addComponent(LB_language))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CB_language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CB_output_encoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CB_input_encoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(CB_delete_source)))
                                .addGap(18, 18, 18)
                                .addComponent(BT_split, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_filepath)
                    .addComponent(TF_file_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_output_file_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_save_as)
                    .addComponent(LB_output_file_path))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_output_filename)
                    .addComponent(CB_output_file_name_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(LB_splitby)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB_lines_per_file)
                            .addComponent(TF_lines_per_file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB_size_per_file)
                            .addComponent(TF_size_per_file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CB_size_unit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB_custom_delimiter)
                            .addComponent(TF_custom_delimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_input_encoding)
                    .addComponent(CB_input_encoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_output_encoding)
                    .addComponent(CB_output_encoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_language)
                    .addComponent(CB_language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_split)
                    .addComponent(CB_delete_source))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @brief Implement corresponded action to JCombobox CB_language
     * @param evt java action event
     * @remark Require jdom library
     */
    private void CB_languageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_languageActionPerformed
        switch(CB_language.getSelectedIndex()){
            case 0:
                lanManager.setLanSetEN();
                break;
            case 1:
                lanManager.setLanSetTH_TW();
                break;
        }
        lanManager.changeLanguage(lanManager.getLanSet());
        setUILanguage(lanManager.getLanTextList());
    }//GEN-LAST:event_CB_languageActionPerformed
    
    /**
     * @brief Implement set language action for UI
     * @param lanTextList A hashmap contains leaf node label as key and string of leaf node as value
     */
    private void setUILanguage(HashMap<String,String> lanTextList){        
        LB_filepath.setText(lanTextList.get(LanguageManager.LeafNodeLabel.INPUT_FILE_PATH.getText()));
        LB_output_file_path.setText(lanTextList.get(LanguageManager.LeafNodeLabel.OUTPUT_FILE_PATH.getText()));
        LB_output_filename.setText(lanTextList.get(LanguageManager.LeafNodeLabel.OUTPUT_FILE_NAME.getText()));
        LB_splitby.setText(lanTextList.get(LanguageManager.LeafNodeLabel.SPLIT_BY.getText()));
        LB_input_encoding.setText(lanTextList.get(LanguageManager.LeafNodeLabel.INPUT_ENCODING.getText()));
        LB_output_encoding.setText(lanTextList.get(LanguageManager.LeafNodeLabel.OUTPUT_ENCODING.getText()));
        LB_language.setText(lanTextList.get(LanguageManager.LeafNodeLabel.LANGUAGE.getText()));
        RB_lines_per_file.setText(lanTextList.get(LanguageManager.LeafNodeLabel.LINES_PER_FILE.getText()));
        RB_size_per_file.setText(lanTextList.get(LanguageManager.LeafNodeLabel.SIZE_PER_FILE.getText()));
        RB_custom_delimiter.setText(lanTextList.get(LanguageManager.LeafNodeLabel.CUSTOM_DELIMITER.getText()));
        CB_delete_source.setText(lanTextList.get(LanguageManager.LeafNodeLabel.DELETE_SOURCE.getText()));
        //.setText(lanTextList.get(LanguageManager.LeafNodeLabel.AUTO.getText()));//TODO set label in combobox
        
        BT_browse.setText(lanTextList.get(LanguageManager.LeafNodeLabel.BROWSE.getText()));
        BT_save_as.setText(lanTextList.get(LanguageManager.LeafNodeLabel.SAVE_AS.getText()));
        BT_split.setText(lanTextList.get(LanguageManager.LeafNodeLabel.SPLIT.getText()));
    }
    
    private void RB_lines_per_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_lines_per_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RB_lines_per_fileActionPerformed

    private void RB_custom_delimiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_custom_delimiterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RB_custom_delimiterActionPerformed

    private void CB_size_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_size_unitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_size_unitActionPerformed

    /**
     * @brief Implement corresponded action to JButton BT_browse to browser the file in system
     * @param evt java action event
     */
    private void BT_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_browseActionPerformed
        file_chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file_chooser.setFileFilter(new TypeOfFile());
        file_chooser.setMultiSelectionEnabled(false);
        
        int rVal = file_chooser.showOpenDialog(TwTextSpliterGUI.this);
        
        if (rVal == JFileChooser.APPROVE_OPTION) {
            refresh_TF_input_file_path();
            refresh_TF_output_file_path();
        }
        if (rVal == JFileChooser.CANCEL_OPTION) {
        }
    }//GEN-LAST:event_BT_browseActionPerformed

     /**
     * @brief Implement corresponded action to JButton BT_split
     * @param evt java action event
     */
    private void BT_splitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_splitActionPerformed
        
        File input_fd = new File(TF_file_path.getText());
        Spliter spliter = new Spliter(input_fd);
        
        if(RB_lines_per_file.isSelected()){
            
            int lines = Integer.parseInt(TF_lines_per_file.getText());
            LanguageManager.LeafNodeLabel retval = spliter.split_by_lines(lines);
            if(retval == LanguageManager.LeafNodeLabel.SUCCESS){
                UIMessager.showNotice(retval.getText(),lanManager);
            }else{
                UIMessager.showError(retval.getText(),lanManager);
            }
            //split(Spliter.Split_method.SPLIT_BY_LINES,input_fd);
            
        }else if(RB_size_per_file.isSelected()){
            int size = Integer.parseInt(TF_size_per_file.getText());
            Spliter.Size_unit unit = Spliter.Size_unit.KB;
            switch (CB_size_unit.getSelectedIndex()) {
                case 0:
                    unit = Spliter.Size_unit.KB;
                    break;
                case 1:
                    unit = Spliter.Size_unit.MB;
                    break;
                case 2:
                    unit = Spliter.Size_unit.GB;
                    break;
                default:
                    UIMessager.showError(LanguageManager.LeafNodeLabel.UNKNOWN_ERROR.getText(),lanManager);
            }
            LanguageManager.LeafNodeLabel retval = spliter.split_by_size(size,unit);
            if(retval == LanguageManager.LeafNodeLabel.SUCCESS){
                UIMessager.showNotice(retval.getText(),lanManager);
            }else{
                UIMessager.showError(retval.getText(),lanManager);
            }
            //split(Spliter.Split_method.SPLIT_BY_SIZE,input_fd);
     
        } else if (RB_custom_delimiter.isSelected()) {

            String delimiter = TF_custom_delimiter.getText();
            LanguageManager.LeafNodeLabel retval = spliter.split_by_costom_delimiter(delimiter);
            if (retval == LanguageManager.LeafNodeLabel.SUCCESS) {
                UIMessager.showNotice(retval.getText(), lanManager);
            } else {
                UIMessager.showError(retval.getText(), lanManager);
            }
            //split(Spliter.Split_method.SPLIT_BY_CUSTOM_DELIMITER,input_fd);

        } else {
            //didnt select any split method
            UIMessager.showWarning(LanguageManager.LeafNodeLabel.SPLIT_METHOD_NULL.getText(), lanManager);
            return;
        }

        
        if(CB_delete_source.isSelected()){
            input_fd.delete();
        }
    }//GEN-LAST:event_BT_splitActionPerformed

    
    private void TF_lines_per_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_lines_per_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_lines_per_fileActionPerformed

    private void CB_output_file_name_formatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_output_file_name_formatActionPerformed
        refresh_output_file_name_format(CB_output_file_name_format.getSelectedIndex());
        refresh_TF_output_file_path();
    }//GEN-LAST:event_CB_output_file_name_formatActionPerformed

    private void TF_output_file_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_output_file_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_output_file_pathActionPerformed

    public static void main(
            String args[] ///< the command line arguments
    ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwTextSpliterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                TwTextSpliterGUI gui_Frame = new TwTextSpliterGUI();
                ImageIcon icon = new ImageIcon(".\\res\\img\\testicon.png");
                //gui_Frame.setIconImage(icon.getImage());
                gui_Frame.setTitle("Text Spliter");
                //gui_Frame.setOpacity(Float.valueOf("0.5"));
                gui_Frame.setLocation(400, 200);
                gui_Frame.setVisible(true);
            }
        });
    }
    
    private void refresh_output_file_name_format(int index){
        Spliter spliter = new Spliter();
        switch(index){
            case 0:
                spliter.setOutput_file_name_format("1+%d.txt");
                output_file_name_format = "1+%d.txt";
                break;
            case 1:
                spliter.setOutput_file_name_format("1+%02d.txt");
                output_file_name_format = "1+%02d.txt";
                break;
            case 2:
                spliter.setOutput_file_name_format("%d.txt");
                output_file_name_format = "%d.txt";
                break;
            case 3:
                spliter.setOutput_file_name_format("%02d.txt");
                output_file_name_format = "%02d.txt";
                break;
            default:
                UIMessager.showError(LanguageManager.LeafNodeLabel.UNKNOWN_ERROR.getText(),lanManager);
                break;
        }
    }
    
    /**
     * @brief Refresh JTextfield TF_file_path when BT_beowse chooses a new file
     * 
     * @return void
     */
    private void refresh_TF_input_file_path(){
        TF_file_path.setText(file_chooser.getCurrentDirectory().toString()+"\\"+file_chooser.getName(file_chooser.getSelectedFile()));
    }
    
    /**
     * @brief Refresh Jtextfield TF_output_file_path
     * 
     * @return void
     */
    private void refresh_TF_output_file_path(){
        if(TF_file_path.getText().equals("")){
            //do nothing
        }else{
            refresh_output_file_name_format(CB_output_file_name_format.getSelectedIndex());
            TF_output_file_path.setText(file_chooser.getCurrentDirectory().toString()+"\\"+output_file_name_format);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BG_splitby;
    private javax.swing.JButton BT_browse;
    private javax.swing.JButton BT_save_as;
    private javax.swing.JButton BT_split;
    private javax.swing.JCheckBox CB_delete_source;
    private javax.swing.JComboBox CB_input_encoding;
    private javax.swing.JComboBox CB_language;
    private javax.swing.JComboBox CB_output_encoding;
    private javax.swing.JComboBox CB_output_file_name_format;
    private javax.swing.JComboBox CB_size_unit;
    private javax.swing.JLabel LB_filepath;
    private javax.swing.JLabel LB_input_encoding;
    private javax.swing.JLabel LB_language;
    private javax.swing.JLabel LB_output_encoding;
    private javax.swing.JLabel LB_output_file_path;
    private javax.swing.JLabel LB_output_filename;
    private javax.swing.JLabel LB_splitby;
    private javax.swing.JRadioButton RB_custom_delimiter;
    private javax.swing.JRadioButton RB_lines_per_file;
    private javax.swing.JRadioButton RB_size_per_file;
    private javax.swing.JTextField TF_custom_delimiter;
    private javax.swing.JTextField TF_file_path;
    private javax.swing.JTextField TF_lines_per_file;
    private javax.swing.JTextField TF_output_file_path;
    private javax.swing.JTextField TF_size_per_file;
    // End of variables declaration//GEN-END:variables
}

/**
 * @brief Type of file that should be display in JFileChooser will be set here 
 * We choose to display only directory and text file
 * @author Mako Chang
 */
class TypeOfFile extends FileFilter{
    @Override
    public boolean accept(File f){  
        return f.isDirectory()||f.getName().toLowerCase().endsWith(".txt");  
    }  
  
    //Set description for the type of file that should be display  
    @Override
    public String getDescription(){  
        return ".txt (text file)";  
    }  
}

